spring.application.name=gpt-telegram-bot
spring.config.import=file:.env[.properties]

#   Telegram-bot
telegram-bot.token=${TELEGRAM_BOT_TOKEN}
telegram-bot.username=${TELEGRAM_BOT_USERNAME}

#   Yandex
yandex.folder-id=${YANDEX_FOLDER_ID}
yandex.oauth-token=${YANDEX_OAUTH_TOKEN}
yandex.chatbot-base-url=https://llm.api.cloud.yandex.net/foundationModels/v1/completion
yandex.art-model-base-url=https://llm.api.cloud.yandex.net/foundationModels/v1/imageGenerationAsync
yandex.chatbot-uri-pattern=gpt://%s/yandexgpt/latest
yandex.art-model-uri-pattern=art://%s/yandex-art/latest
yandex.art-model-complete-url-pattern=https://llm.api.cloud.yandex.net:443/operations/%s
yandex.iam-token-updater-url=https://iam.api.cloud.yandex.net/iam/v1/tokens

#   HttpClient
http-client.max-idle-connections=10
http-client.keep-alive-millis=600000
http-client.max-parallel-requests=16
http-client.max-parallel-requests-per-host=10000
http-client.connect-timeout=10000
http-client.read-timeout=20000
http-client.write-timeout=10000

#   RetryTemplate
retry.max-attempts=120
retry.back-off-period-millis=3000

#   Executor
executor.pool-size-multiplier-for-max-pool-size=5
executor.queue-capacity=100
executor.keep-alive-seconds=60
executor.await-termination-seconds=30
executor.thread-name-prefix=gptbot-exec-

#   Database
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.liquibase.change-log=classpath:/db/changelog/changelog-master.xml
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

#   Redis cache
spring.data.redis.port=6379
spring.data.redis.database=2
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.password=${REDIS_PASSWORD}

#   Logging
logging.file.path=logs/

#   Port 8081 only for testing. Use 8080 for production
server.port=8081
#server.port=8080
